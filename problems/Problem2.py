#!/usr/bin/python3
# -*- coding: utf-8 -*-

"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""


"""
Method to obtain the even numbers of the Fibonacci sequence below a limit value
- Args:
    param1: The limit value of the Fibonacci sequence
- Returns:
    res: The list with the even numbers of the Fibonacci sequence below a limit value
"""
def evenValuedFibonacciBelowNumber(limit):
    res = []
    fib0 = 1
    fib1 = 1
    while fib1 < limit:
        aux = fib0 + fib1
        fib0 = fib1
        fib1 = aux
        if fib1 % 2 == 0:
            res.append(fib1)
    return res

"""
Method to get the sum of all the numbers of a list
- Args:
    param1: The list of numbers to sum
- Returns:
    res: The sum of all the elements of the list
"""
def sumListNumbers(list):
    res = 0
    for i in list:
        res = res + i
    return res

# Get the even numbers of the Fibonacci sequence below 4000000
evenValuedFibonacci = evenValuedFibonacciBelowNumber(4000000)

# Sum the numbers in the list of even numbers of the Fibonacci sequence below 4000000 got in the previous line
sumFibonacci = sumListNumbers(evenValuedFibonacci)

# Print result
print (sumFibonacci)