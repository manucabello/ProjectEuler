#!/usr/bin/python3
# -*- coding: utf-8 -*-

"""
Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting with 1 and 2, the first 10 terms will be:
1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
"""


def evenValuedFibonacciBelowNumber(limit):
    res = []
    fib0 = 1
    fib1 = 1
    while fib1 < limit:
        aux = fib0 + fib1
        fib0 = fib1
        fib1 = aux
        if fib1 % 2 == 0:
            res.append(fib1)
    return res

def sumListNumbers(list):
    res = 0
    for i in list:
        res = res + i
    return res

evenValuedFibonacci = evenValuedFibonacciBelowNumber(4000000)
print (evenValuedFibonacci)
sumFibonacci = sumListNumbers(evenValuedFibonacci)
print (sumFibonacci)